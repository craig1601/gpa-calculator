{"version":3,"sources":["Navbar.jsx","CreateArea.jsx","GpaTable.jsx","Subject.jsx","LabCreateArea.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","CreateArea","useState","subject","credits","grade","internals","style","endsem","marks","note","setNote","handleChange","event","target","name","value","preventDefault","prev","type","placeholder","onChange","onClick","whenClicked","GpaTable","Subject","backgroundColor","Math","ceil","whenDelete","id","LabCreateArea","App","subjectList","setSubjectList","gpa","setGpa","prevGpa","setPrevGpa","inputType","setInputType","handleDelete","filter","index","parseFloat","roundMarks","map","key","cred","val","totCred","totVal","forEach","sub","parseInt","round","Number","EPSILON","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ba77669e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Navbar(props) {\r\n\r\n    \r\n        return (\r\n          <nav className=\"top-section navbar\">\r\n            <span className=\"heading\"><i className=\"fas fa-calculator icon\"></i>GPA Calculator</span>       \r\n          </nav>\r\n        );\r\n      \r\n}\r\n\r\nexport default Navbar;","import React, { useState } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nfunction CreateArea(props) {\r\n\r\n    const [note, setNote] = useState({\r\n        subject: \"\",\r\n        credits: \"\",\r\n        grade: \"\",\r\n        internals: \"\",\r\n        style: \"\",\r\n        endsem: \"\",\r\n        marks: \"\"\r\n    });\r\n\r\n    function handleChange(event){\r\n        const {name, value} = event.target;\r\n        event.preventDefault();\r\n        setNote(prev => {\r\n            return{\r\n                ...prev,\r\n                [name]: value\r\n            };\r\n        })\r\n    }\r\n\r\n    function handleClick(event){\r\n        props.whenClicked(note);\r\n        event.preventDefault();\r\n        setNote({\r\n            subject: \"\",\r\n        credits: \"\",\r\n        grade: \"\",\r\n        internals: \"\"\r\n        });\r\n    }\r\n    return(\r\n        <div className=\"create-area\">\r\n\r\n        <form>\r\n<div><input type=\"text\" placeholder=\"Subject\" className=\"subject basic\" name=\"subject\" onChange={handleChange} value={note.subject}/></div>\r\n        <div>\r\n        <input placeholder=\"Internals\" className=\"marks basic\" name=\"internals\" onChange={handleChange} value={note.internals}></input>\r\n        <input type=\"text\" placeholder=\"Credits\" className=\"credits basic\" name=\"credits\" onChange={handleChange} value={note.credits}/>\r\n        </div>\r\n        \r\n\r\n        <button onClick={handleClick}>\r\n            <AddIcon />\r\n        </button>\r\n\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateArea;","import React from \"react\";\r\n\r\nfunction GpaTable(props) {\r\n    \r\n    return(\r\n        \r\n            <div  className=\"gpa-table\"> \r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Grade</th>\r\n                        <th>Marks</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>A+</td>\r\n                        <td>90-100</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>A</td>\r\n                        <td>80-89</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>B</td>\r\n                        <td>70-79</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>C</td>\r\n                        <td>60-69</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>D</td>\r\n                        <td>50-59</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>E</td>\r\n                        <td>40-49</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>F</td>\r\n                        <td>&lt;40</td>\r\n                    </tr>\r\n                    </tbody>\r\n                 </table>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default GpaTable;","import React from \"react\";\r\n\r\nfunction Subject(props) {\r\n\r\nfunction handleClick(){\r\n    props.whenDelete(props.id)\r\n}\r\n\r\n    return(\r\n        <div className=\"subject-note\" style={{backgroundColor: props.style}}>\r\n             <div>Subject: {props.subject}</div>\r\n             <div>Marks: {props.marks} ({Math.ceil(props.marks)})</div>\r\n              <div>Grade: {props.grade}</div>          \r\n              <div>Credits: {props.credits}</div>\r\n              <button className=\"delete\" onClick={handleClick}><i className=\"fas fa-trash-alt\"></i></button>\r\n        </div>\r\n    )\r\n}\r\nexport default Subject;","import React, { useState } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nfunction LabCreateArea(props){\r\n\r\n    const [note, setNote] = useState({\r\n        subject: \"\",\r\n        credits: \"\",\r\n        grade: \"\",\r\n        internals: \"\",\r\n        style: \"\",\r\n        endsem: \"\",\r\n        marks: \"\"\r\n    });\r\n\r\n    function handleChange(event){\r\n        const {name, value} = event.target;\r\n        event.preventDefault();\r\n        setNote(prev => {\r\n            return{\r\n                ...prev,\r\n                [name]: value\r\n            };\r\n        })\r\n    }\r\n\r\n    function handleClick(event){\r\n        props.whenClicked(note);\r\n        event.preventDefault();\r\n        setNote({\r\n            subject: \"\",\r\n        credits: \"\",\r\n        grade: \"\",\r\n        marks: \"\"\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"create-area\">\r\n\r\n        <form>\r\n<div><input type=\"text\" placeholder=\"Lab Name\" className=\"subject basic\" name=\"subject\" onChange={handleChange} value={note.subject}/></div>\r\n        <div>\r\n        <input placeholder=\"Marks\" className=\"marks basic\" name=\"marks\" onChange={handleChange} value={note.marks}></input>\r\n        <input type=\"text\" placeholder=\"Credits\" className=\"credits basic\" name=\"credits\" onChange={handleChange} value={note.credits}/>\r\n        </div>\r\n        \r\n\r\n        <button onClick={handleClick}>\r\n            <AddIcon />\r\n        </button>\r\n\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LabCreateArea;","import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport CreateArea from \"./CreateArea\";\nimport GpaTable from \"./GpaTable\";\nimport Subject from \"./Subject\"\nimport LabCreateArea from \"./LabCreateArea\"\n\nfunction App() {\n\n  const [subjectList, setSubjectList] = useState([]);\n  const [gpa,setGpa] = useState(\"\");\n  const [prevGpa, setPrevGpa] = useState(\"\");\n  const [inputType, setInputType] = useState(true)\n\n  function handleGpa(){\n    var cred;\n    var val;\n    var grd;\n    var gpaCalc;\n    var totCred=0;\n    var totVal=0;\n    subjectList.forEach(sub => {\n      cred = sub.credits;\n      grd = sub.grade;\n      switch(grd){\n        case \"A+\": val=10;break;\n        case \"A\": val=9;break;\n        case \"B\": val=8;break;\n        case \"C\": val=7;break;\n        case \"D\": val=6;break;\n        case \"E\": val=5;break;\n        case \"F\": val=0;break;\n        default: val=0;\n      }\n      totCred+=parseInt(cred);\n      totVal+=(cred*val);\n      \n\n    })\n    gpaCalc=totVal/totCred;\n    setGpa(gpaCalc);\n  }\n\n  function handleClick(note){\n    note.endsem = 0.5*note.internals + 2.5*prevGpa;\n    note.marks = parseFloat(note.internals) + parseFloat(note.endsem);\n    var roundMarks = Math.ceil(note.marks);\n    if(roundMarks >= 90){\n      note.grade=\"A+\";\n      note.style=\"blue\";\n    }\n    else if(roundMarks >=80){\n      note.grade=\"A\";\n     note.style=\"#06a94d\";\n    }\n    else if(roundMarks >=70){\n      note.grade=\"B\";\n      note.style=\"#90ee90\";\n    }\n    else if(roundMarks >=60){\n      note.grade=\"C\";\n     note.style=\"yellow\";\n    }\n    else if(roundMarks >=50){\n      note.grade=\"D\";\n     note.style=\"orange\";\n    }\n    else if(roundMarks >=40){\n      note.grade=\"E\";\n      note.style=\"grey\";\n    }\n    else{\n      note.grade=\"F\";\n      note.style=\"red\";\n    }\n    setSubjectList(prev => {\n      return(\n        [...prev, note]\n      );\n    })\n  }\n\n  function handleGpaChange(event){\n    setPrevGpa(event.target.value)\n  }\n\n  function handleDelete(id){\n    setSubjectList(prev => {\n      return(\n        subjectList.filter((note,index) => {\n          return index !== id;\n        })\n      );\n    });\n  }\n\n  function handleLabClick(note){\n    var roundMarks = Math.ceil(note.marks);\n    if(roundMarks >= 90){\n      note.grade=\"A+\";\n      note.style=\"blue\";\n    }\n    else if(roundMarks >=80){\n      note.grade=\"A\";\n     note.style=\"#06a94d\";\n    }\n    else if(roundMarks >=70){\n      note.grade=\"B\";\n      note.style=\"#90ee90\";\n    }\n    else if(roundMarks >=60){\n      note.grade=\"C\";\n     note.style=\"yellow\";\n    }\n    else if(roundMarks >=50){\n      note.grade=\"D\";\n     note.style=\"orange\";\n    }\n    else if(roundMarks >=40){\n      note.grade=\"E\";\n      note.style=\"grey\";\n    }\n    else{\n      note.grade=\"F\";\n      note.style=\"red\";\n    }\n    setSubjectList(prev => {\n      return(\n        [...prev, note]\n      );\n    })\n  }\n\n  function changeInput(){\n    setInputType(!inputType);\n  }\n\n  return (\n        <div>\n            <Navbar />\n            <div className=\"description top-section\">\n            <div className=\"desc\">End Sem marks = 0.5 x Internals + 2.5 x Previous GPA</div>\n            <div className=\"desc\">GPA is calculated based on the following scheme</div>\n                <GpaTable />\n               \n                {inputType && <input id=\"GPA\" type=\"text\" placeholder=\"Previous GPA\" className=\"prev-gpa\" value={prevGpa} onChange={handleGpaChange}/>}\n                {inputType && <CreateArea whenClicked={handleClick}/> }\n                {!inputType && <LabCreateArea whenClicked={handleLabClick}/> } \n                <p><a onClick={changeInput} className=\"gpa-btn\">{inputType ? \"Enter Lab Marks\" : \"Enter Subject Marks\"}</a></p>       \n                <div className=\"all-subjects\">\n            {subjectList.map((note,index) => {\n              return <Subject whenDelete={handleDelete} key={index} id={index} subject={note.subject} grade={note.grade} credits={note.credits} marks={note.marks} style={note.style}/>\n              \n            })}\n            </div>\n\n            <div className=\"gpa-calculate\">\n                <div>\n                  <button className=\"gpa-btn\" onClick={handleGpa}>Calculate</button>\n                </div>\n                <p className=\"gpa\">GPA: {Math.round((gpa + Number.EPSILON) * 100) / 100} </p>\n            </div>\n            </div>\n            \n\n            \n           \n        </div>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}